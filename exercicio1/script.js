//## Parte 1
//Construa um programa, seguindo as instruÃ§Ãµes abaixo:
//**a)** Declare uma variÃ¡vel para armazenar um **nome**, sem atribuir um valor a essa variÃ¡vel.
let nome = ""

//**b)** Declare uma variÃ¡vel para armazenar uma **idade**, sem atribuir um valor a essa variÃ¡vel.
let idade = ""

//**c)** Imprima na tela o **tipo** dessas variÃ¡veis que acabou de criar, usando o comando `typeof`.
//console.log(typeof nome, typeof idade)

//**d)** Reflita: por que esse tipo foi impresso? Escreva a resposta em um comentÃ¡rio de cÃ³digo.
//quando colocamos as aspas aparece como string, porÃ©m a idade seria number e nÃ£o string

//**e)** Depois, disso, atualize o cÃ³digo para **perguntar** ao usuÃ¡rio seu nome e sua idade, atribuindo esses dois valores Ã s variÃ¡veis que acabou de criar.
let nome1 = prompt("Qual Ã© o seu nome?")
let idade1 = Number(prompt("Qual a sua idade?"))
console.log(typeof nome1, "e", typeof idade1) 

//>ğŸ’¡Se vocÃª receber um erro de cÃ³digo nessa etapa, reflita sobre o tipo de declaraÃ§Ã£o que utilizou.
//NÃ£o retornou erro, estavam certos

//**f)** Novamente, imprima na tela o tipo dessas variÃ¡veis. O que vocÃª notou? Escreva em um comentÃ¡rio de cÃ³digo.
//retornou uma string, que seria o nome e um number que seria a idade

//**g)** Para finalizar, imprima na tela a mensagem: "OlÃ¡, `nome`,  vocÃª tem `idade` anos". Lembre-se: `nome` e `idade` sÃ£o os valores inseridos pelo usuÃ¡rio.
console.log("OlÃ¡,", nome1, "vocÃª tem", idade1, "anos!")

//>ğŸ’¡  Dica: para imprimir mais de um valor na mesma linha, vocÃª pode usar essa sintaxe:
//apÃ³s digitar console.log acima apareceu a frase "OlÃ¡, Camila vocÃª tem 40 anos!"
